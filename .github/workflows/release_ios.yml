name: "iOS Release Build"

on:
  workflow_call:
  
jobs:
  build-ios:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 19
        uses: actions/setup-node@v3
        with:
          node-version: 19
          cache: "npm"
        
      - name: Install Node modules
        run: cd example && npm ci && cd ../

      - name: Restore Pods cache
        uses: actions/cache@v3
        with:
          path: |
            ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install pod dependencies
        run: cd example/ios && bundle install && bundle exec pod install && cd ..

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles 

      - name: Setup iOS Secrets
        env: 
          SECRECT_CLIENT_ID: ${{ secrets.CLIENT_ID }}
          SECRET_API_KEY: ${{ secrets.API_SECRET }}
        shell: bash  
        run: |
          echo "$PWD"
          sudo chmod 777 example/ios/plaidRNDemoTests/PlaidCredentials.swift
          sudo chmod 777 example/ios/plaidRNDemoTests/create_credentials_swift_struct.rb
          
          cat example/ios/plaidRNDemoTests/PlaidCredentials.swift
          ruby example/ios/plaidRNDemoTests/create_credentials_swift_struct.rb "$SECRECT_CLIENT_ID" "$SECRET_API_KEY"
          cat example/ios/plaidRNDemoTests/PlaidCredentials.swift

      - name: Select Xcode Version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "14.3.1"

      - name: Build and Test iOS
        run: xcodebuild -workspace example/ios/plaidRNDemo.xcworkspace -scheme plaidRNDemo -sdk iphonesimulator -destination "platform=iOS Simulator,name=iPhone 14 Pro,OS=16.4" ONLY_ACTIVE_ARCH=YES  -resultBundlePath CIiOSResults -derivedDataPath "./build/iOS" build test
      - uses: kishikawakatsumi/xcresulttool@v1
        with:
          path: CIiOSResults.xcresult
        if: success() || failure()
